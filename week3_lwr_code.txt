from google.colab import files
uploaded=files.upload() 

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
def kernel(point, xmat, k):   
   m,n = np.shape(xmat)    
   weights = np.mat(np.eye((m))) 
   #print("WEIGHTS",weights)  
   for j in range(m):      
     diff = point - X[j]    
     weights[j,j] = np.exp(diff*diff.T/(-2.0*k**2))  
     #print("WEIGHTS",weights) 
  
   return weights
   print(weights)

def localWeight(point, xmat, ymat, k): 
  print("XMAT",xmat)
  print("YMAT",ymat)
  print("K",k)   
  wei = kernel(point,xmat,k)    
  W = (X.T*(wei*X)).I*(X.T*(wei*ymat.T))  
  #print("W",W)  
  return W

def localWeightRegression(xmat, ymat, k):    
  m,n = np.shape(xmat)    
  ypred = np.zeros(m)
  print(ypred)
  #print("M",m)   
  for i in range(m):        
     ypred[i] = xmat[i]*localWeight(xmat[i],xmat,ymat,k)
     #print("ypred",ypred[i])   
  return ypred

# load data points
data = pd.read_csv('hotel-bill.csv')
bill = np.array(data.total_bill)
print("Bill",bill)
tip = np.array(data.tip)
print("Tip",tip)

#preparing and tip bill
mbill = np.mat(bill)
print("Mbill",mbill)
mtip = np.mat(tip)
print("Mtip",mtip)

m= np.shape(mbill)[1]
#print(m)
one = np.mat(np.ones(m))
#print(m)
X = np.hstack((one.T,mbill.T))
print("X",X)

#set k here
ypred = localWeightRegression(X,mtip,0.5)
print("ypred",ypred)
SortIndex = X[:,1].argsort(0)
print("Sortindex",SortIndex)
xsort = X[SortIndex][:,0]
print("XSORT",xsort)

fig = plt.figure()
ax = fig.add_subplot(1,1,1)
ax.scatter(bill,tip, color='green')
ax.plot(xsort[:,1],ypred[SortIndex], color = 'red', linewidth=5)
plt.xlabel('Total bill')
plt.ylabel('Tip')
plt.show();